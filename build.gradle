plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'com.modrinth.minotaur' version '2.+'
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}")
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }
}

subprojects {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}

project(':forge') {
    curseforge {
        apiKey = project.findProperty("curseforge.token") ?: System.getenv("CURSEFORGE_TOKEN")
        project {
            id = 'your_curseforge_project_id'
            releaseType = 'release'
            addGameVersion rootProject.minecraft_version
            mainArtifact(remapJar) {
                displayName = "YourModName-${rootProject.mod_version}"
            }
            addArtifact(apiJar) {
                displayName = "YourModName-${rootProject.mod_version}-sources"
            }
        }
    }

    modrinth {
        token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN")
        projectId = 'your_modrinth_project_id'
        versionNumber = rootProject.mod_version
        versionType = 'release'
        uploadFile = remapJar
        gameVersions = [rootProject.minecraft_version]
        loaders = ['forge']
    }
}
